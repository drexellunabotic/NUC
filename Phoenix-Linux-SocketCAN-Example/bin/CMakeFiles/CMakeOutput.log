Determining if the include file pthread.h exists passed with the following output:
Change Dir: /home/luna/Phoenix-Linux-SocketCAN-Example/bin/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/gmake -f Makefile cmTC_4f4b8/fast && /usr/bin/gmake  -f CMakeFiles/cmTC_4f4b8.dir/build.make CMakeFiles/cmTC_4f4b8.dir/build
gmake[1]: Entering directory '/home/luna/Phoenix-Linux-SocketCAN-Example/bin/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_4f4b8.dir/CheckIncludeFile.c.o
/usr/bin/cc    -o CMakeFiles/cmTC_4f4b8.dir/CheckIncludeFile.c.o -c /home/luna/Phoenix-Linux-SocketCAN-Example/bin/CMakeFiles/CMakeTmp/CheckIncludeFile.c
Linking C executable cmTC_4f4b8
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_4f4b8.dir/link.txt --verbose=1
/usr/bin/cc -rdynamic CMakeFiles/cmTC_4f4b8.dir/CheckIncludeFile.c.o -o cmTC_4f4b8 
gmake[1]: Leaving directory '/home/luna/Phoenix-Linux-SocketCAN-Example/bin/CMakeFiles/CMakeTmp'



Performing C SOURCE FILE Test CMAKE_HAVE_LIBC_PTHREAD succeeded with the following output:
Change Dir: /home/luna/Phoenix-Linux-SocketCAN-Example/bin/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/gmake -f Makefile cmTC_73eb1/fast && /usr/bin/gmake  -f CMakeFiles/cmTC_73eb1.dir/build.make CMakeFiles/cmTC_73eb1.dir/build
gmake[1]: Entering directory '/home/luna/Phoenix-Linux-SocketCAN-Example/bin/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_73eb1.dir/src.c.o
/usr/bin/cc -DCMAKE_HAVE_LIBC_PTHREAD   -o CMakeFiles/cmTC_73eb1.dir/src.c.o -c /home/luna/Phoenix-Linux-SocketCAN-Example/bin/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_73eb1
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_73eb1.dir/link.txt --verbose=1
/usr/bin/cc -rdynamic CMakeFiles/cmTC_73eb1.dir/src.c.o -o cmTC_73eb1 
gmake[1]: Leaving directory '/home/luna/Phoenix-Linux-SocketCAN-Example/bin/CMakeFiles/CMakeTmp'


Source file was:
#include <pthread.h>

static void* test_func(void* data)
{
  return data;
}

int main(void)
{
  pthread_t thread;
  pthread_create(&thread, NULL, test_func, NULL);
  pthread_detach(thread);
  pthread_cancel(thread);
  pthread_join(thread, NULL);
  pthread_atfork(NULL, NULL, NULL);
  pthread_exit(NULL);

  return 0;
}

